name: Build and Test k-NN
on:
  schedule:
    - cron: '0 0 * * *'  # every night
  push:
    branches:
      - "*"
      - "feature/**"
    paths:
      - 'build.gradle'
      - 'settings.gradle'
      - 'src/**'
      - 'build-tools/**'
      - 'buildSrc/**'
      - 'gradle/**'
      - '.github/workflows/CI.yml'
  pull_request:
    branches:
      - "*"
      - "feature/**"
    paths:
      - 'build.gradle'
      - 'settings.gradle'
      - 'src/**'
      - 'build-tools/**'
      - 'buildSrc/**'
      - 'gradle/**'
      - '.github/workflows/CI.yml'

jobs:
  Get-CI-Image-Tag:
    uses: opensearch-project/opensearch-build/.github/workflows/get-ci-image-tag.yml@main
    with:
      product: opensearch

  Build-k-NN-Linux:
    strategy:
      matrix:
        java: [21, 23]

    env:
       CC: gcc10-gcc
       CXX: gcc10-g++
       FC: gcc10-gfortran

    name: Build and Test jVector k-NN Plugin on Linux
    runs-on: ubuntu-latest
    needs: Get-CI-Image-Tag
    container:
      # using the same image which is used by opensearch-build team to build the OpenSearch Distribution
      # this image tag is subject to change as more dependencies and updates will arrive over time
      image: ${{ needs.Get-CI-Image-Tag.outputs.ci-image-version-linux }}
      # need to switch to root so that github actions can install runner binary on container without permission issues.
      options: ${{ needs.Get-CI-Image-Tag.outputs.ci-image-start-options }}

    steps:
      - name: Run start commands
        run: ${{ needs.Get-CI-Image-Tag.outputs.ci-image-start-command }}

      - name: Checkout jVector k-NN
        uses: actions/checkout@v4

      - name: Setup Java ${{ matrix.java }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ matrix.java }}
          distribution: 'temurin'

      - name: Run build
        # switching the user, as OpenSearch cluster can only be started as root/Administrator on linux-deb/linux-rpm/windows-zip.
        run: |
          chown -R 1000:1000 `pwd`
          ./gradlew build


      - name: Upload Coverage Report
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  Build-k-NN-MacOS:
    strategy:
      matrix:
        java: [21, 23]

    name: Build and Test jVector k-NN Plugin on MacOS
    needs: Get-CI-Image-Tag
    runs-on: macos-13

    steps:
      - name: Checkout jVector k-NN
        uses: actions/checkout@v4

      - name: Setup Java ${{ matrix.java }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ matrix.java }}
          distribution: 'temurin'

      - name: Run build
        run: |
          ./gradlew build

  Build-k-NN-Windows:
    strategy:
      matrix:
        java: [21, 23]

    name: Build and Test jVector k-NN Plugin on Windows
    needs: Get-CI-Image-Tag
    runs-on: windows-latest

    steps:
      - name: Checkout jVector k-NN
        uses: actions/checkout@v4

      - name: Setup Java ${{ matrix.java }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ matrix.java }}
          distribution: 'temurin'

      - name: Install MinGW Using Scoop
        run: |
          iex "& {$(irm get.scoop.sh)} -RunAsAdmin"
          scoop bucket add main
          scoop install mingw

      - name: Add MinGW to PATH
        run: |
          echo "C:/Users/runneradmin/scoop/apps/mingw/current/bin" >> $env:GITHUB_PATH
          Import-Module "$env:ChocolateyInstall\helpers\chocolateyProfile.psm1"
          refreshenv

      - name: Run build
        run: |
          ./gradlew.bat build
